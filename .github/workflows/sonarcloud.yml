# name: "sonar_cloud_scan_github_actions"
# on:
#   push:
#     branches: [ "main", "jesus_sonarqube" ]
#   workflow_dispatch:

# jobs:
#   DemoSonarCloudSCan:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#         with:
#             fetch-depth: 0
#       - name: SonarCloud Scan
#         uses: sonarsource/sonarcloud-github-action@master
#         env:
#             GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
#             SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         with:
#           args: >
#               -Dsonar.organization=petcareapi
#               -Dsonar.projectKey=yisuslopez45_proyectoDDSII
#               -Dsonar.python.coverage.reportPaths=coverage.xml

name: "sonar_cloud_scan_github_actions"

on:
  push:
    branches: [ "main", "jesus_sonarqube" ]
  workflow_dispatch:

jobs:
  DemoSonarCloudScan:
    runs-on: ubuntu-latest
    steps:
      # Clona el repositorio
      - uses: actions/checkout@v3
        with:
            fetch-depth: 0

      # Configura Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"  # Ajusta según la versión que uses

      # Instala dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov

      # Ejecuta pruebas con cobertura
      - name: Run tests with coverage
        run: |
          cd petcareAPI
          pytest --cov=core --cov-report=xml core/pet/tests.py

      # Ejecuta el análisis de SonarCloud
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
            GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
              -Dsonar.organization=petcareapi
              -Dsonar.projectKey=yisuslopez45_proyectoDDSII
              -Dsonar.python.coverage.reportPaths=petcareAPI/coverage.xml
